package com.webssk.maven.plugins;

public class TextToPython extends TextToCode {

    @Override
    protected String quoteString(String string) {
        StringBuffer buffer = new StringBuffer();
        buffer.append("\"");
        buffer.append(string.replaceAll("\\\\", "\\\\\\\\")
                .replaceAll("\"", "\\\\\\\"").replaceAll("\n", "\\\\n"));
        buffer.append("\"");
        return buffer.toString();
    }

    @Override
    protected StringBuffer getScript() {
        StringBuffer sb = new StringBuffer();
        if (!params.getOutputCharset().isEmpty()) {
            sb.append("# -*- coding: ${output.charset}\n");
        }
        sb.append("# This is autogenerated file, don't change it manually\n");
        sb.append("# Source file has located at "
                + makeProperty(TextToPythonProperties.INPUT_FILE) + "\n\n");
        sb.append(makeProperty(TextToPythonProperties.VARIABLE_NAME)
                + " = \\\n    ");
        sb.append(makeProperty(TextToPythonProperties.TEXT_STRING));
        return sb;
    }

    @Override
    protected String stringConcat() {
        return " \\\n    ";
    }

    @Override
    protected Class<? extends TextToCodeProperties> getPropertiesClass() {
        return TextToPythonProperties.class;
    }

    public static void main(String[] args) {
        TextToPython python = new TextToPython();
        TextToPythonProperties params = (TextToPythonProperties) python
                .getProperties();
        params.setInputFile("src/test/resources/test.sql");
        params.setInputCharset("windows-1251");
        params.setOutputFile("src/test/resources/test.py");
        params.setOutputCharset("utf-8");
        params.setVariableName("test");
        python.run();
    }
}
